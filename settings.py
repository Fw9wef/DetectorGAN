lambda_ABA = 10.                        # cycle loss lambda for A->B->A domain transformation
lambda_BAB = 10.                        # cycle loss lambda for B->A->B domain transformation
lambda_local = 1.                       # loss lambda for local generator
GPU_IDS = []                            # GPU indices for model training if [] -> using CPU
pool_size = 50                          # image pool size
max_crop_side = 50                      # maximum crop size in pixels
decay_start = 5000                      # epochs to start learning rate decay
epochs_to_zero_lr = 5000                # epochs num to zero lr (decay_start + epochs_to_zero_lr)
warmup_epochs = 0                       # warmup epochs (if learning continues from a given epoch number)
path_to_experiment = './exp'            # path to experiment savings
path_to_images = './imgs'               # path to image data
path_to_empty_images = './empty_imgs'   # path ot images without objects
path_to_annotation = './ann'            # path to image annotation
load_pretrained_detector = True         # load resnet34 pretrained weights?
n_classes = 1                           # number of detectable classes
gan_pretrain_epochs = 100               # number of epochs for gan pretraining
joint_train_epochs = 100                # number of epoch for training gan and detector jointly
negative_ratio = 3                      # hard negative mining ratio
aspect_ratios = [1]                     # aspect ratios for anchor boxies
reg_alpha = 1.                          # weight of regression loss
batch_size = 8                          # batch size
num_workers = 16                        # num workers
